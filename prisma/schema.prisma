generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Task {
  id Int @id @default(autoincrement())
  title String
  description String?
}

enum Role {
  USER
  ADMIN
}

model User {
  id                 String      @id @default(uuid())
  name               String?
  email              String      @unique
  password           String
  role               Role        @default(USER)
  isVerified         Boolean     @default(false) @map("is_verified")
  verificationToken  String?     @map("verification_token")
  refreshToken       String?     @map("refresh_token")
  createdAt          DateTime    @default(now()) @map("created_at")
  updatedAt          DateTime    @updatedAt @map("updated_at")

  curiosities        Curiosity[]
  logs               Log[]

  @@map("users")
}

model Category {
  id          String      @id @default(uuid())
  name        String      @unique
  description String?
  curiosities Curiosity[]

  @@map("categories")
}

model Topic {
  id               String           @id @default(uuid())
  name             String           @unique
  description      String?

  curiosityTopics  CuriosityTopic[]

  @@map("topics")
}

model Curiosity {
  id               String           @id @default(uuid())
  title            String
  content          String
  createdAt        DateTime         @default(now()) @map("created_at")
  updatedAt        DateTime         @updatedAt @map("updated_at")
  
  user             User             @relation(fields: [userId], references: [id])
  userId           String

  category         Category         @relation(fields: [categoryId], references: [id])
  categoryId       String

  isApproved       Boolean          @default(false) @map("is_approved")
  
  images           Image[]
  curiosityTopics  CuriosityTopic[]

  @@map("curiosities")
}

model Image {
  id          String     @id @default(uuid())
  url         String

  curiosity   Curiosity  @relation(fields: [curiosityId], references: [id])
  curiosityId String

  @@map("images")
}

model CuriosityTopic {
  curiosity   Curiosity  @relation(fields: [curiosityId], references: [id])
  curiosityId String

  topic       Topic      @relation(fields: [topicId], references: [id])
  topicId     String

  @@id([curiosityId, topicId])
  @@map("curiosity_topics")
}

model Log {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String

  action      String
  target      String
  createdAt   DateTime  @default(now()) @map("created_at")

  @@map("logs")
}
