generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Task {
  id Int @id @default(autoincrement())
  title String
  description String?
}

enum Role {
  USER
  ADMIN
}

model User {
  id         Int          @id @default(autoincrement())
  name       String?
  email      String       @unique
  password   String
  role       Role         @default(USER)
  curiosities Curiosity[]
  logs       Log[]

  createdAt  DateTime     @default(now()) @map("created_at")

  @@map("users")
}

model Category {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  description String?
  curiosities Curiosity[]

  @@map("categories")
}

model Topic {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  description String?

  curiosityTopics CuriosityTopic[]

  @@map("topics")
}

model Curiosity {
  id          Int          @id @default(autoincrement())
  title       String
  content     String
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  category    Category     @relation(fields: [categoryId], references: [id])
  categoryId  Int
  isApproved  Boolean      @default(false) @map("is_approved")
  images      Image[]
  curiosityTopics CuriosityTopic[]

  @@map("curiosities")
}

model Image {
  id          Int       @id @default(autoincrement())
  url         String
  curiosity   Curiosity @relation(fields: [curiosityId], references: [id])
  curiosityId Int

  @@map("images")
}

model CuriosityTopic {
  curiosity   Curiosity @relation(fields: [curiosityId], references: [id])
  curiosityId Int
  topic       Topic     @relation(fields: [topicId], references: [id])
  topicId     Int

  @@id([curiosityId, topicId])
  @@map("curiosity_topics")
}

model Log {
  id         Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  action     String
  target     String
  createdAt  DateTime  @default(now()) @map("created_at")

  @@map("logs")
}